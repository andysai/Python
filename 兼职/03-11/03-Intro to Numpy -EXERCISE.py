# -*- coding: utf-8 -*-
"""Intro to Numpy -EXERCISE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AG8OBUnY2awuXpZhUrDSnail5ate2fda

---
# Crash Course Python for Data Science - Intro to Python
---
# 06 - Numpy
---

##STOP! BEFORE GOING ANY FURTHER...

1. Click "File" at the top.
2. Then, "Save a Copy in Drive."
3. Change the file name to something else, so you can differenciate it from the workshop notes. For example, put your name at the beggining: "Grace_Python NumPy-EXERCISE".

Now you have a copy of this notebook in your Drive account. This is the copy you'll edit and save for your own archives. You can come back to it as many times as you like to practice again! Be sure to do this for ***every*** exercise!

Remember, this exercises are open book, open neighbour, open everything! Try to do them on your own before looking at the solution samples. Join the slack channel to ask your questions. I will be in the channel too!

### Import Numpy as Np
"""

# Make sure you run this cell first
import numpy as np
print('NumPy imported!')

"""### Generate random numbers
Create a (5,3) Numpy array of random integer values between 0 and 100.
"""

### YOUR CODE GOES HERE ###
a = np.random.randint(0, 100, (5, 3))
print(a)

#@title Double click here for a sample solution

x = np.random.randint(0,100, (5,3))
x

"""### Array practice"""

# Return the first row:

### YOUR CODE GOES HERE ###
print(a[0,])

#@title Double click here for a sample solution

# Return the first row:
x[0,]

# Return last column

### YOUR CODE GOES HERE ###
print(a[:,-1])

#@title Double click here for a sample solution

# Return last column
x[:, -1]

# Return the third column values from the 4th and 5th rows

### YOUR CODE GOES HERE ###
print(a[3:5,2])

#@title Double click here for a sample solution

# Return the third column values from the 4th and 5th rows
x[3:5,2]

# Multiply every value in the array by 2

### YOUR CODE GOES HERE ###
print(a * 2)

#@title Double click here for a sample solution

# Multiply every value in the array by 2
x*2

# Divide every value by 3

### YOUR CODE GOES HERE ###
print(a / 3)

#@title Double click here for a sample solution

# Divide every value by 3
x/3

# Increase the values in the first row by 12

### YOUR CODE GOES HERE ###
a[0, ] = a[0, ] + 12
print(a)

#@title Double click here for a sample solution

# Increase the values in the first row by 12
x[0,] = x[0,] + 12
x

# Calculate the mean of the first column

### YOUR CODE GOES HERE ###
avg = round(sum(a[:, 0]) / len(a[:, 0]), 2)
print(avg)

#@title Double click here for a sample solution

# Calculate the mean of the first column
x[:,0].mean()

# Calculate the median of the array after removing the 2 smallest values in the array

### YOUR CODE GOES HERE ###
a1 = np.delete(a, a.argmin())
a1 = np.delete(a1, a1.argmin())
print(np.median(a1))

#@title Double click here for a sample solution

# Calculate the median of the array after removing the 2 smallest values in the array
x1 = np.delete(x, x.argmin())
x1 = np.delete(x1, x1.argmin())
np.median(x1)

# Calculate the standard deviation of the first 3 rows

### YOUR CODE GOES HERE ###
print(round(np.std(a[:3],), 3))

#@title Double click here for a sample solution

# Calculate the standard deviation of the first 3 rows
np.std(x[:3],)

# Return values in the second column greater than 25

### YOUR CODE GOES HERE ###
print(f'Values in the second column greater than 25 is {a[:, 1][a[:, 1] > 25]}')

#@title Double click here for a sample solution

# Return values in the second column greater than 25
print("Values bigger than 25 on the second column =", x[:,1][x[:,1]>25])

# Return values in the array under 40

### YOUR CODE GOES HERE ###
print(f'Values in the array under 40 is {a[a < 40]}')

#@title Double click here for a sample solution

# Return values in the array under 40
print("Values under 40 in array =", x[x<40])