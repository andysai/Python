# -*- coding: utf-8 -*-
"""Descriptive Statistics I - EXERCISE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CBuUdyQVLRWDtbRMGONHIdeu7XMSAb5V

---
# Crash Course Python for Data Science - Intro to Statistics
---
# 01 - Descriptive Statistics I
---

##STOP! BEFORE GOING ANY FURTHER...

1. Click "File" at the top.
2. Then, "Save a Copy in Drive."
3. Change the file name to something else, so you can differenciate it from the workshop notes. For example, put your name at the beggining: "Grace_Stats 1-EXERCISE".

Now you have a copy of this notebook in your Drive account. This is the copy you'll edit and save for your own archives. You can come back to it as many times as you like to practice again! Be sure to do this for ***every*** exercise!

Remember, this exercises are open book, open neighbour, open everything! Try to do them on your own before looking at the solution samples. Join the slack channel to ask your questions. I will be in the channel too!

### Import Numpy, pandas, and matplotlib
"""

import numpy as np, pandas as pd, matplotlib.pyplot as plt

plt.style.use(style='ggplot')
plt.rcParams['figure.figsize'] = (10, 6)

print('Libraries imported!')

"""### Import the data in the CSV file
Today you'll be working with the tips dataset from the lecture. You can find the data [here](https://raw.githubusercontent.com/axrd/datasets/master/tipdata.csv). Remember we do the `index_col=0` to avoid importing an extra index column! 
"""

# Run this cell to import the data

df = pd.read_csv('https://raw.githubusercontent.com/axrd/datasets/master/tipdata.csv', index_col=0)

"""### Print out the first 10 rows"""

### YOUR CODE GOES HERE ###
df.head(10)

#@title Double click here for a sample solution
df.head(10)

"""### Print out the last 10 rows"""

### YOUR CODE GOES HERE ###
df.tail(10)

#@title Double click here for a sample solution

df.tail(10)

"""### What is the shape of the DataFrame?"""

### YOUR CODE GOES HERE ###
df.shape

#@title Double click here for a sample solution

df.shape

"""### What is the data type of each column/feature?"""

### YOUR CODE GOES HERE ###
df.dtypes

#@title Double click here for a sample solution
df.dtypes

"""### Are there any missing values?"""

### YOUR CODE GOES HERE ###
df.isnull().sum()

#@title Double click here for a sample solution
df.isnull().sum()

"""### What is the average total bill? Calculate the mean, median, and mode. """

### YOUR CODE GOES HERE ###
import statistics as stats

print('Mean bill is ', np.mean(df['total_bill']))
print('Median bill is ', np.median(df['total_bill']))
print('Mode bill is ', stats.mode(df['total_bill']))

#@title Double click here for a sample solution

import statistics as stats

print('Mean bill is ', np.mean(df['total_bill']))
print('Median bill is ', np.median(df['total_bill']))
print('Mode bill is ', stats.mode(df['total_bill']))

"""### Which of the three do you think best represents the data? Why?


---

Double click here to write your answer below.

Answer:
"""

#@title Double click here for a sample solution

# The median, because 50% of the data is above and 50% is below.
# The mean is a bit smaller than the median.
# If it was the same or a bit closer, I'd go for the mean.

"""### Visualize the distribution of tips. Describe it (skew, kurtosis, etc.)."""

### YOUR CODE GOES HERE ####
from scipy.stats import kurtosis, skew
plt.style.use('ggplot')
df['tip'].hist(bins='auto');

#Positively skewed, kurtosis pretty ambiguous from histogram

print( 'excess kurtosis of normal distribution (should be 0): {}'.format( kurtosis(df['tip']) ))
print( 'skewness of normal distribution (should be 0): {}'.format( skew(df['tip']) ))

#@title Double click here for a sample solution

from scipy.stats import kurtosis, skew
plt.style.use('ggplot')
df['tip'].hist(bins='auto');

#Positively skewed, kurtosis pretty ambiguous from histogram

print( 'excess kurtosis of normal distribution (should be 0): {}'.format( kurtosis(df['tip']) ))
print( 'skewness of normal distribution (should be 0): {}'.format( skew(df['tip']) ))

"""### What is the range of tips? """

### YOUR CODE GOES HERE ###
print('Range of tips: ', range(len(df['tip'])))

#@title Double click here for a sample solution

print('Range of tips: ', range(len(df['tip'])))

"""### Create a boxplot for tips. See the Intro to Pandas lesson for hints. """

### YOUR CODE GOES HERE ###
df.boxplot(column='tip')

#@title Double click here for a sample solution

df.boxplot(column='tip');

"""### What was the most common day?"""

### YOUR CODE GOES HERE ###
print('Most common day was', stats.mode(df['day']))

#@title Double click here for a sample solution

print('Most common day was', stats.mode(df['day']))

"""### What was the most common gender?"""

### YOUR CODE GOES HERE ###
print('Most common gender was', stats.mode(df['sex']))

#@title Double click here for a sample solution

print('Most common gender was', stats.mode(df['sex']))

"""### What is the standard deviation of "tips"?"""

### YOUR CODE GOES HERE ###
print('Standard deviation of tips:', np.std(df['tip']))

#@title Double click here for a sample solution

print('Standard deviation of tips:', np.std(df['tip']))

"""### What is the variance of total bill?"""

### YOUR CODE GOES HERE ###
print('Variance of total bill:', np.var(df['total_bill']))

#@title Double click here for a sample solution

print('Variance of total bill:', np.var(df['total_bill']))

"""### Amazing! Well done. 


---

The question below is _optional_. Only tackle it after you've completed the rest of the assignment!

### STRETCH: Visualize all the numeric features and describe their distributions.
"""

### YOUR CODE GOES HERE ###
df['tip'].hist(bins='auto')
print( 'excess kurtosis of normal distribution (should be 0): {}'.format( kurtosis(df['tip']) ))
print( 'skewness of normal distribution (should be 0): {}'.format( skew(df['tip']) ))

#@title Double click here for a sample solution for `tip`

# positively skewed, positive excess kurtosis
df['tip'].hist(bins='auto')
print( 'excess kurtosis of normal distribution (should be 0): {}'.format( kurtosis(df['tip']) ))
print( 'skewness of normal distribution (should be 0): {}'.format( skew(df['tip']) ))

#@title Double click here for a sample solution for `total_bill`

# positively skewed, positive excess kurtosis
df['total_bill'].hist(bins='auto')
print( 'excess kurtosis of normal distribution (should be 0): {}'.format( kurtosis(df['total_bill']) ))
print( 'skewness of normal distribution (should be 0): {}'.format( skew(df['total_bill']) ))