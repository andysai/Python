# -*- coding: utf-8 -*-
"""Cleaning Data - EXERCISE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12-1k-cTFUeC0cRTctGSKbIor_1S-NFTK

---
# Crash Course Python for Data Science - Intro to Pandas
---
# 04 - Cleaning Data
---

##STOP! BEFORE GOING ANY FURTHER...

1. Click "File" at the top.
2. Then, "Save a Copy in Drive."
3. Change the file name to something else, so you can differenciate it from the workshop notes. For example, put your name at the beggining: "Grace_Pandas Cleaning Data-EXERCISE".

Now you have a copy of this notebook in your Drive account. This is the copy you'll edit and save for your own archives. You can come back to it as many times as you like to practice again! Be sure to do this for ***every*** exercise!

Remember, this exercises are open book, open neighbour, open everything! Try to do them on your own before looking at the solution samples. Join the slack channel to ask your questions. I will be in the channel too!

### Import pandas
"""

# Run this!
import pandas as pd
print('pandas imported!')

"""### Import the data in the CSV file
You can find the data [here](https://raw.githubusercontent.com/axrd/datasets/master/gdpmessy2.csv). Should have a shape of (222,3). Use this [resource](https://www.iban.com/country-codes) to clean values correctly.
"""

# Run this cell first to load the dataset.
df = pd.read_csv('https://raw.githubusercontent.com/axrd/datasets/master/gdpmessy2.csv', index_col=0)

"""### Quickly inspect the head"""

### YOUR CODE GOES HERE ###
df.head()

#@title Double click here for a sample solution

df.head()

"""### Inspect the tail"""

### YOUR CODE GOES HERE ###
df.tail()

#@title Double click here for a sample solution

df.tail()

"""### What is the shape of the DataFrame? Does it correspond to what we expected? """

### YOUR CODE GOES HERE ###
df.shape

#@title Double click here for a sample solution

df.shape

"""### Missing values?
Find all the missing values and correct them. 
"""

# First, check how many missing values you have
# Hint: Use the sum() method


### YOUR CODE GOES HERE ###
df.isnull().sum()

#@title Double click here for a sample solution

df.isnull().sum()

# Now, you need to know which are your missing values so that you can replace them.
# Hint: Explore the different methods that pandas dataframes have to clean your dataset.


### YOUR CODE GOES HERE ###
df[df.isnull().any(axis=1)]

#@title Double click here for a sample solution

df[df.isnull().any(axis=1)]

# Now that you know what is missing, you can
# use this resource: https://www.iban.com/country-codes to clean the values correctly.

### YOUR CODE GOES HERE ###
df.at[6, "countrys"] = "Anguilla"
df.at[14, "code"] = 'BHS'
df.at[16, "GDP"] = 186.6
df.at[20, "countrys"] = 'Belize'
df.at[55, "code"] = "DNK"
df.at[70, "GDP"] = 2902.0
df.at[90, 'code'] = 'HUN'
df.at[96, 'GDP'] = 245.8
df.at[100, 'code'] = 'JAM'
df.at[106, 'countrys'] = 'Kiribati'
df.at[200, 'code'] = 'TGO'
df.at[206, 'countrys'] = 'Tuvalu'

#@title Double click here for a sample solution

df.at[6, "countrys"] = "Anguilla"
df.at[14, "code"] = 'BHS'
df.at[16, "GDP"] = 186.6
df.at[20, "countrys"] = 'Belize'
df.at[55, "code"] = "DNK"
df.at[70, "GDP"] = 2902.0
df.at[90, 'code'] = 'HUN'
df.at[96, 'GDP'] = 245.8
df.at[100, 'code'] = 'JAM'
df.at[106, 'countrys'] = 'Kiribati'
df.at[200, 'code'] = 'TGO'
df.at[206, 'countrys'] = 'Tuvalu'

# Finally, check that everything worked and you don't have any
# missing values anymore.

### YOUR CODE GOES HERE ###
df.isnull().sum()

#@title Double click here for a sample solution
df.isnull().sum()

"""### Find duplicate values  
Clean where necessary:  
*   France has a GDP of 2902.0 billion.
*   Ireland has a GDP of 245.80 billion.
*   Bangladesh has a GDP of 186.60 billion.
"""

# Check if you have any duplicates for the variable "countrys"
# Hint: we did this in the workshop. Check your notes.


### YOUR CODE GOES HERE ###
df["countrys"].value_counts(sort=True).head()

#@title Double click here for a sample solution

df["countrys"].value_counts(sort=True).head()

# Check for duplicates in "GDP"

### YOUR CODE GOES HERE ###
df["GDP"].value_counts(sort=True).head()

#@title Double click here for a sample solution

df["GDP"].value_counts(sort=True).head()

# Check for duplicates in "code"

### YOUR CODE GOES HERE ###
df["code"].value_counts(sort=True).head()

#@title Double click here for a sample solution

df["code"].value_counts(sort=True).head()

# Solve any issues you found

### YOUR CODE GOES HERE ###
df[df['code'] == "ARG"]
df.at[209, 'code'] = 'ARE'
df[df['code'] == "ZMB"]
df.at[221, 'code'] = 'ZWE'

#@title Double click here for a sample solution

df[df['code'] == "ARG"]
df.at[209, 'code'] = 'ARE'
df[df['code'] == "ZMB"]
df.at[221, 'code'] = 'ZWE'

"""### Verify the change persisted!"""

### YOUR CODE GOES HERE ###
df["code"].value_counts(sort=True).head()

#@title Double click here for a sample solution

df["code"].value_counts(sort=True).head()

"""### You did it! This was quite a challenging exercise. Congratulations on your perseverance. See you on the next one.


---

"""